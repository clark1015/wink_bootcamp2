
services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    ports:
      - "${MYSQL_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - backend-network

  redis:
    image: redis:7.2
    container_name: redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend-network

  spring:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring-backend
    restart: unless-stopped
    ports:
      - "${SPRING_PORT}:8080"
    depends_on:
      - mysql
      - redis
      - rabbitmq
    env_file:
      - .env
    networks:
      - backend-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"    # AMQP 기본 포트 (Spring이 이걸 통해 통신)
      - "15672:15672"  # RabbitMQ 관리 UI 접속 포트
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - backend-network

volumes:
  mysql-data:

networks:
  backend-network:
    driver: bridge